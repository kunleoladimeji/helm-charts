apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "benotes.fullname" . }}
  labels:
    {{- include "benotes.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "benotes.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "benotes.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "benotes.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "benotes.fullname" . }}
          env:
            {{- if .Values.externalDbUrl }}
            - name: DATABASE_URL
              value: {{ .Values.externalDbUrl }}
            {{- else }}
            - name: DB_CONNECTION
            {{- if .Values.sqlite.enabled }}
              value: sqlite
            {{- else if .Values.postgresql.enabled }} 
              value: psql 
            {{- else }} 
              value: mysql
            {{- end }}
            - name: DB_DATABASE
            {{- if .Values.mysql.enabled }}
              value: {{ .Values.mysql.auth.database }}
            {{- else if .Values.sqlite.enabled }}
              value: /var/www/storage/{{ .Values.sqlite.dbPath }}
            {{- else }}
              value: {{ .Values.postgresql.auth.database }}
            {{- end }}
            {{- end }}
            {{- range .Values.extraEnv }}
            {{- if and (.name) (.value) }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.path }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "benotes.pvcName" . }}
      {{- end }} 
